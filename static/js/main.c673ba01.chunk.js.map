{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","props","useState","edit","value","input","setInput","styleInput","styleButton","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","isComplete","type","placeholder","name","onChange","ref","ToDo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","onClick","ToDoList","setTodos","test","newTodos","updatedTodo","removeArr","filter","todoId","newValue","prev","item","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAmEeA,MAjEf,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EACJ,4HACIC,EACJ,2NAEIC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAWMC,EAAe,SAACC,GACpBT,EAASS,EAAEC,OAAOZ,QAGpB,OACE,sBAAMa,UAAU,sBAAsBC,SAhBnB,SAACH,GACpBA,EAAEI,iBAEFlB,EAAMiB,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMnB,EACNoB,YAAY,IAGdnB,EAAS,KAOT,SACGL,EAAME,KACL,qCACE,uBACEuB,KAAK,OACLC,YAAY,iBACZvB,MAAOC,EACPuB,KAAK,OACLX,UAAS,qBAAgBV,EAAhB,0BACTsB,SAAUf,EACVgB,IAAKrB,IAEP,wBAAQQ,UAAS,sBAAiBT,EAAjB,SAAjB,uBAKF,qCACE,uBACEkB,KAAK,OACLC,YAAY,aACZvB,MAAOC,EACPuB,KAAK,OACLX,UAAS,qBAAgBV,EAAhB,0BACTsB,SAAUf,EACVgB,IAAKrB,IAEP,wBAAQQ,UAAS,sBAAiBT,EAAjB,SAAjB,4BCbKuB,MA1Cf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC/C,EAAwBjC,mBAAS,CAC/BkB,GAAI,KACJhB,MAAO,KAFT,mBAAOD,EAAP,KAAaiC,EAAb,KAaA,OAAIjC,EAAKiB,GACE,cAAC,EAAD,CAAUjB,KAAMA,EAAMe,SATZ,SAAAd,GACjB+B,EAAWhC,EAAKiB,GAAIhB,GACpBgC,EAAQ,CACJhB,GAAI,KACJhB,MAAO,QAQR4B,EAAMK,KAAI,SAACC,EAAMC,GACtB,OACE,sBACEtB,UAAS,yDAAqDqB,EAAKb,WAA6D,8CAAjD,gDADjF,UAIE,mBAEEe,QAAS,kBAAMP,EAAaK,EAAKlB,KACjCH,UAAU,qDAHZ,SAKGqB,EAAKd,MAJDc,EAAKlB,IAMZ,wBAAQH,UAAU,mBAAmBuB,QAAS,kBAAIJ,EAAQ,CAAChB,GAAIkB,EAAKlB,GAAIhB,MAAOkC,EAAKd,QAApF,SACE,mBAAGP,UAAU,oDAEf,wBAAQA,UAAU,cAAcuB,QAAS,kBAAIN,EAAWI,EAAKlB,KAA7D,SACE,mBAAGH,UAAU,qDAbVsB,OCgCEE,MArDf,WACE,MAA0BvC,mBAAS,IAAnC,mBAAO8B,EAAP,KAAcU,EAAd,KAsCA,OACE,sBAAKzB,UAAU,cAAf,UACE,oBAAIA,UAAS,UAvCD,6CAuCZ,mCACA,cAAC,EAAD,CAAUC,SAtCE,SAACoB,GACf,GAAKA,EAAKd,OAAQ,QAAQmB,KAAKL,EAAKd,MAApC,CAIA,IAAMoB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,OAgCP,cAAC,EAAD,CACEZ,MAAOA,EACPC,aAhBe,SAAAb,GACnB,IAAIyB,EAAcb,EAAMK,KAAI,SAACC,GAI3B,OAHIA,EAAKlB,KAAOA,IACdkB,EAAKb,YAAca,EAAKb,YAEnBa,KAETI,EAASG,IAULX,WAhCa,SAACd,GAClB,IAAM0B,EAAY,YAAId,GAAOe,QAAO,SAACT,GAAD,OAAUA,EAAKlB,KAAOA,KAE1DsB,EAASI,IA8BLX,WA3Ba,SAACa,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG5CkB,GAAS,SAACQ,GAAD,OACPA,EAAKb,KAAI,SAACc,GAAD,OAAWA,EAAK/B,KAAO4B,EAASC,EAAWE,eCf3CC,E,4JATb,WACE,OACE,qBAAKnC,UAAU,6CAAf,SACE,cAAC,EAAD,U,GAJUoC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c673ba01.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction ToDoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n  const styleInput =\r\n    \"rounded-lg flex-1 appearance-none w-full py-2 px-4 text-white placeholder-gray-400 shadow-sm text-base focus:outline-none\";\r\n  const styleButton =\r\n    \"flex-shrink-0 px-4 py-2 text-base font-semibold text-white bg-purple-600 rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200\";\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n      isComplete: false,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form my-4 flex\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Edit your todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className={`todo-input ${styleInput} text-lg font-semibold`}\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className={`todo-button ${styleButton} ml-4`}>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className={`todo-input ${styleInput} text-lg font-semibold`}\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className={`todo-button ${styleButton} ml-4`}>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ToDoForm;\r\n","import React, { useState } from \"react\";\r\nimport ToDoForm from \"./ToDoForm\";\r\n\r\nfunction ToDo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n      updateTodo(edit.id, value)\r\n      setEdit({\r\n          id: null,\r\n          value: ''\r\n      })\r\n  }\r\n\r\n  if (edit.id){\r\n      return <ToDoForm edit={edit} onSubmit={submitUpdate}/>\r\n  }\r\n\r\n  return todos.map((todo, index) => {\r\n    return (\r\n      <div\r\n        className={`todo-row p-2 flex items-center mb-4 rounded-lg ${!todo.isComplete? 'bg-gradient-to-l from-yellow-400 to-pink-500' : 'bg-gradient-to-r from-blue-400 to-green-500'}`}\r\n        key={index}\r\n      >\r\n        <p\r\n          key={todo.id}\r\n          onClick={() => completeTodo(todo.id)}\r\n          className=\"text-2xl inline flex-grow text-white font-semibold\"\r\n        >\r\n          {todo.text}\r\n        </p>\r\n        <button className=\"icon inline mr-4\" onClick={()=>setEdit({id: todo.id, value: todo.text})}>\r\n          <i className=\"fa-solid fa-pen-to-square text-2xl text-white\"></i>\r\n        </button>\r\n        <button className=\"icon inline\" onClick={()=>removeTodo(todo.id)}>\r\n          <i className=\"fa-solid fa-circle-xmark text-2xl text-white\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\nimport ToDo from \"./ToDo\";\r\nimport ToDoForm from \"./ToDoForm\";\r\n\r\nfunction ToDoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const h1Style = \"text-center text-4xl font-bold text-white\";\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodo = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo\r\n    });\r\n    setTodos(updatedTodo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-shrink\">\r\n      <h1 className={`${h1Style}`}>Add to your todo list</h1>\r\n      <ToDoForm onSubmit={addTodo} />\r\n      <ToDo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ToDoList from \"./components/ToDoList\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"flex m-auto p-4 todo-app shadow rounded-lg\">\n        <ToDoList/>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}